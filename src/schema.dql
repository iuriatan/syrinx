User.name: string @index(hash) .
User.password: password .
User.email: string @index(hash) .
User.roles: [string] @index(hash) .
User.invitation: string @index(hash) .
User.isLoggedIn: bool .
User.lastLogin: dateTime .
User.libraries: [uid] .
User.playlists: [uid] @reverse .

Library.name: string @index(hash) .
Library.path: string .
Library.track: [uid] @count .
Library.artist: [uid] @count .
Library.playlist: [uid] @count .
Library.durationSeconds: int .
Library.sizeKilobytes: int .

Artist.names: [string] @index(term) .
Artist.mbid: string @index(hash) .

CreativeWork.title: string @index(term) .
CreativeWork.artist: string @index(term) .
CreativeWork.byArtist: [uid] .
CreativeWork.originalYear: int @index(int) .

MusicRecording.file: [string] @index(hash) .
MusicRecording.mbid: string @index(hash) .
MusicRecording.durationSeconds: int .
MusicRecording.sizeKilobytes: int .
MusicRecording.inAlbum: uid .

MusicAlbum.mbid: string @index(hash) .
MusicAlbum.track: uid .

type User {
    User.name
    User.email
    User.password
    User.roles
    User.isLoggedIn
    User.lastLogin
    User.playlists
    User.invitation
}

type Library {
    Library.name
    Library.path
    Library.track
    Library.artist
    Library.playlist
}

type Artist {
    Artist.names
    Artist.mbid
}

type Album {
    CreativeWork.title
    CreativeWork.artist
    CreativeWork.byArtist
    CreativeWork.originalYear
    MusicAlbum.mbid
}

type MusicRecording {
    CreativeWork.title
    CreativeWork.artist
    CreativeWork.byArtist
    CreativeWork.originalYear
    MusicRecording.mbid
    MusicRecording.file
    MusicRecording.durationSeconds
    MusicRecording.sizeKilobytes
    MusicRecording.inAlbum
}